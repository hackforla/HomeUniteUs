openapi: 3.0.0
info:
  license:
    name: MIT
  title: Home Unite Us
  version: 1.0.0
servers:
  - url: http://homeunite.us/api
paths:
  /serviceProviders:
    $ref: './paths/serviceProviders.yaml'
  /serviceProviders/{providerId}:
    $ref: './paths/serviceProviders.yaml'
  /guests:
    delete:
      description: Delete a guest
      operationId: delete_guest
      parameters:
        - description: guest id to delete
          explode: false
          in: path
          name: guestId
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "400":
          description: Invalid guest valu
      summary: Deletes a guest
      tags:
        - guest
      x-openapi-router-controller: openapi_server.controllers.guest_controller
    get:
      description: See the full list of guests
      operationId: list_guests
      parameters:
        - description: How many items to return at one time (max 100)
          explode: true
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Guests"
          description: successful operation
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: unexpected error
      summary: List all guests
      tags:
        - guest
      x-openapi-router-controller: openapi_server.controllers.guest_controller
    post:
      operationId: create_guest
      responses:
        "201":
          description: Null response
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: unexpected error
      summary: Create a guest
      tags:
        - guest
      x-openapi-router-controller: openapi_server.controllers.guest_controller
    put:
      description: Update a guest
      operationId: update_guest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Guest"
        description: Update guest
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Guest"
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Guest not found
        "405":
          description: Validation exception
      summary: Update a guest
      tags:
        - guest
      x-openapi-router-controller: openapi_server.controllers.guest_controller
  /guests/{guestId}:
    get:
      operationId: show_guest_by_id
      parameters:
        - description: The id of the guest to retrieve
          explode: false
          in: path
          name: guestId
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Guest"
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: unexpected error
      summary: Info for a specific guest
      tags:
        - guests
      x-openapi-router-controller: openapi_server.controllers.guests_controller
  /guests/{guestId}/uploadImage:
    post:
      operationId: upload_guest_image
      parameters:
        - description: ID of guest to update
          explode: false
          in: path
          name: guestId
          required: true
          schema:
            type: string
          style: simple
        - description: Additional Metadata
          explode: true
          in: query
          name: additionalMetadata
          required: false
          schema:
            type: string
          style: form
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: successful operation
      summary: uploads an image
      tags:
        - guest
      x-openapi-router-controller: openapi_server.controllers.guest_controller
  /hosts:
    delete:
      description: Delete a host
      operationId: delete_host
      parameters:
        - description: host id to delete
          explode: false
          in: path
          name: hostId
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "400":
          description: Invalid host valu
      summary: Deletes a host
      tags:
        - host
      x-openapi-router-controller: openapi_server.controllers.host_controller
    get:
      description: See the full list of hosts
      operationId: list_hosts
      parameters:
        - description: How many items to return at one time (max 100)
          explode: true
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Hosts"
          description: successful operation
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: unexpected error
      summary: List all hosts
      tags:
        - host
      x-openapi-router-controller: openapi_server.controllers.host_controller
    post:
      operationId: create_host
      responses:
        "201":
          description: Null response
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: unexpected error
      summary: Create a host
      tags:
        - host
      x-openapi-router-controller: openapi_server.controllers.host_controller
    put:
      description: Update a host
      operationId: update_host
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Host"
        description: Update host
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Host"
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Host not found
        "405":
          description: Validation exception
      summary: Update a host
      tags:
        - host
      x-openapi-router-controller: openapi_server.controllers.host_controller
  /hosts/{hostId}:
    get:
      operationId: show_host_by_id
      parameters:
        - description: The id of the host to retrieve
          explode: false
          in: path
          name: hostId
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Host"
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: unexpected error
      summary: Info for a specific host
      tags:
        - hosts
      x-openapi-router-controller: openapi_server.controllers.hosts_controller
  /hosts/{hostId}/uploadImage:
    post:
      operationId: upload_host_image
      parameters:
        - description: ID of host to update
          explode: false
          in: path
          name: hostId
          required: true
          schema:
            type: string
          style: simple
        - description: Additional Metadata
          explode: true
          in: query
          name: additionalMetadata
          required: false
          schema:
            type: string
          style: form
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: successful operation
      summary: uploads an image
      tags:
        - host
      x-openapi-router-controller: openapi_server.controllers.host_controller
  /auth/signup:
    post:
      description: Signup a user
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: successful operation
      tags:
        - auth
      x-openapi-router-controller: openapi_server.controllers.auth_controller
  /auth/signin:
    post:
      description: Sign in a user
      operationId: signin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: successful operation
      tags:
        - auth
      x-openapi-router-controller: openapi_server.controllers.auth_controller
  /auth/confirm:
    post:
      description: Confirm users email
      operationId: confirm
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                code:
                  type: string
              required:
                - email
                - code
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: successful operation
      tags:
        - auth
      x-openapi-router-controller: openapi_server.controllers.auth_controller
  /auth/signout:
    post:
      description: Sign out user from current session
      operationId: signout
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: successful operation
      tags:
        - auth
      x-openapi-router-controller: openapi_server.controllers.auth_controller
  /auth/token:
    post:
      description: Sign in user from OAuth Provider
      operationId: token
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: successful operation
      tags:
        - auth
      x-openapi-router-controller: openapi_server.controllers.auth_controller
  /auth/session:
    get:
      description: Get current session and user information
      operationId: current_session
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: successful operation
      tags:
        - auth
      x-openapi-router-controller: openapi_server.controllers.auth_controller
  /auth/refresh:
    get:
      description: Check for refresh token and current session
      operationId: refresh
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: successful operation
      tags:
        - auth
      x-openapi-router-controller: openapi_server.controllers.auth_controller
  /auth/forgot_password:
    post:
      description: Sends message with a code used when creating a new password
      operationId: forgot_password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: successful operation
      tags:
        - auth
      x-openapi-router-controller: openapi_server.controllers.auth_controller
  /auth/confirm_forgot_password:
    post:
      description: Exchanges code for a new password
      operationId: confirm_forgot_password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                code:
                  type: string
                password:
                  type: string
              required:
                - email
                - code
                - password
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: successful operation
      tags:
        - auth
      x-openapi-router-controller: openapi_server.controllers.auth_controller
  /auth/user:
    get:
      description: Gets current user
      operationId: user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: successful operation
      tags:
        - auth
      x-openapi-router-controller: openapi_server.controllers.auth_controller
      security:
        - jwt: ["secret"]
  /auth/private:
    get:
      description: A private route that returns a message
      operationId: private
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: successful operation
      tags:
        - auth
      x-openapi-router-controller: openapi_server.controllers.auth_controller
      security:
        - jwt: ["secret"]
components:
  parameters:
    $ref: './parameters/_index.yaml'
  schemas:
    allOf:
      $ref: './schemas/_index.yaml'
    Host:
      example:
        photoUrls:
          - photoUrls
          - photoUrls
        name: name
        id: 0
        tag: tag
      properties:
        id:
          format: int64
          title: id
          type: integer
        name:
          title: name
          type: string
        tag:
          title: tag
          type: string
        photoUrls:
          items:
            type: string
          title: photoUrls
          type: array
      required:
        - id
        - name
      title: Host
      type: object
    Guest:
      example:
        photoUrls:
          - photoUrls
          - photoUrls
        name: name
        id: 0
        tag: tag
      properties:
        id:
          format: int64
          title: id
          type: integer
        name:
          title: name
          type: string
        tag:
          title: tag
          type: string
        photoUrls:
          items:
            type: string
          title: photoUrls
          type: array
      required:
        - id
        - name
      title: Guest
      type: object
    Hosts:
      items:
        $ref: "#/components/schemas/Host"
      type: array
    Guests:
      items:
        $ref: "#/components/schemas/Guest"
      type: array
    ApiResponse:
      example:
        code: 0
        type: type
        message: message
      properties:
        code:
          format: int32
          title: code
          type: integer
        type:
          title: type
          type: string
        message:
          title: message
          type: string
      title: ApiResponse
      type: object
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: openapi_server.controllers.security_controller.requires_auth
