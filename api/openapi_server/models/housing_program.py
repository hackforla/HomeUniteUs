# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.housing_program_service_provider import HousingProgramServiceProvider
from openapi_server import util

from openapi_server.models.housing_program_service_provider import HousingProgramServiceProvider  # noqa: E501

class HousingProgram(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, program_name=None, service_provider=None):  # noqa: E501
        """HousingProgram - a model defined in OpenAPI

        :param program_name: The program_name of this HousingProgram.  # noqa: E501
        :type program_name: str
        :param service_provider: The service_provider of this HousingProgram.  # noqa: E501
        :type service_provider: HousingProgramServiceProvider
        """
        self.openapi_types = {
            'program_name': str,
            'service_provider': HousingProgramServiceProvider
        }

        self.attribute_map = {
            'program_name': 'program_name',
            'service_provider': 'service_provider'
        }

        self._program_name = program_name
        self._service_provider = service_provider

    @classmethod
    def from_dict(cls, dikt) -> 'HousingProgram':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HousingProgram of this HousingProgram.  # noqa: E501
        :rtype: HousingProgram
        """
        return util.deserialize_model(dikt, cls)

    @property
    def program_name(self):
        """Gets the program_name of this HousingProgram.


        :return: The program_name of this HousingProgram.
        :rtype: str
        """
        return self._program_name

    @program_name.setter
    def program_name(self, program_name):
        """Sets the program_name of this HousingProgram.


        :param program_name: The program_name of this HousingProgram.
        :type program_name: str
        """
        if program_name is None:
            raise ValueError("Invalid value for `program_name`, must not be `None`")  # noqa: E501

        self._program_name = program_name

    @property
    def service_provider(self):
        """Gets the service_provider of this HousingProgram.


        :return: The service_provider of this HousingProgram.
        :rtype: HousingProgramServiceProvider
        """
        return self._service_provider

    @service_provider.setter
    def service_provider(self, service_provider):
        """Sets the service_provider of this HousingProgram.


        :param service_provider: The service_provider of this HousingProgram.
        :type service_provider: HousingProgramServiceProvider
        """
        if service_provider is None:
            raise ValueError("Invalid value for `service_provider`, must not be `None`")  # noqa: E501

        self._service_provider = service_provider
