# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class HousingProgramServiceProvider(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, provider_name=None):  # noqa: E501
        """HousingProgramServiceProvider - a model defined in OpenAPI

        :param provider_name: The provider_name of this HousingProgramServiceProvider.  # noqa: E501
        :type provider_name: str
        """
        self.openapi_types = {
            'provider_name': str
        }

        self.attribute_map = {
            'provider_name': 'provider_name'
        }

        self._provider_name = provider_name

    @classmethod
    def from_dict(cls, dikt) -> 'HousingProgramServiceProvider':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HousingProgramServiceProvider of this HousingProgramServiceProvider.  # noqa: E501
        :rtype: HousingProgramServiceProvider
        """
        return util.deserialize_model(dikt, cls)

    @property
    def provider_name(self):
        """Gets the provider_name of this HousingProgramServiceProvider.


        :return: The provider_name of this HousingProgramServiceProvider.
        :rtype: str
        """
        return self._provider_name

    @provider_name.setter
    def provider_name(self, provider_name):
        """Sets the provider_name of this HousingProgramServiceProvider.


        :param provider_name: The provider_name of this HousingProgramServiceProvider.
        :type provider_name: str
        """
        if provider_name is None:
            raise ValueError("Invalid value for `provider_name`, must not be `None`")  # noqa: E501

        self._provider_name = provider_name
