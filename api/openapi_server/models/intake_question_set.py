# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.housing_program import HousingProgram
from openapi_server import util

from openapi_server.models.housing_program import HousingProgram  # noqa: E501

class IntakeQuestionSet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, question_set_name=None, housing_program=None):  # noqa: E501
        """IntakeQuestionSet - a model defined in OpenAPI

        :param question_set_name: The question_set_name of this IntakeQuestionSet.  # noqa: E501
        :type question_set_name: str
        :param housing_program: The housing_program of this IntakeQuestionSet.  # noqa: E501
        :type housing_program: HousingProgram
        """
        self.openapi_types = {
            'question_set_name': str,
            'housing_program': HousingProgram
        }

        self.attribute_map = {
            'question_set_name': 'question_set_name',
            'housing_program': 'housing_program'
        }

        self._question_set_name = question_set_name
        self._housing_program = housing_program

    @classmethod
    def from_dict(cls, dikt) -> 'IntakeQuestionSet':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The IntakeQuestionSet of this IntakeQuestionSet.  # noqa: E501
        :rtype: IntakeQuestionSet
        """
        return util.deserialize_model(dikt, cls)

    @property
    def question_set_name(self):
        """Gets the question_set_name of this IntakeQuestionSet.


        :return: The question_set_name of this IntakeQuestionSet.
        :rtype: str
        """
        return self._question_set_name

    @question_set_name.setter
    def question_set_name(self, question_set_name):
        """Sets the question_set_name of this IntakeQuestionSet.


        :param question_set_name: The question_set_name of this IntakeQuestionSet.
        :type question_set_name: str
        """
        if question_set_name is None:
            raise ValueError("Invalid value for `question_set_name`, must not be `None`")  # noqa: E501

        self._question_set_name = question_set_name

    @property
    def housing_program(self):
        """Gets the housing_program of this IntakeQuestionSet.


        :return: The housing_program of this IntakeQuestionSet.
        :rtype: HousingProgram
        """
        return self._housing_program

    @housing_program.setter
    def housing_program(self, housing_program):
        """Sets the housing_program of this IntakeQuestionSet.


        :param housing_program: The housing_program of this IntakeQuestionSet.
        :type housing_program: HousingProgram
        """
        if housing_program is None:
            raise ValueError("Invalid value for `housing_program`, must not be `None`")  # noqa: E501

        self._housing_program = housing_program
