# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class IntakeQuestionType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type_description=None):  # noqa: E501
        """IntakeQuestionType - a model defined in OpenAPI

        :param type_description: The type_description of this IntakeQuestionType.  # noqa: E501
        :type type_description: str
        """
        self.openapi_types = {
            'type_description': str
        }

        self.attribute_map = {
            'type_description': 'type_description'
        }

        self._type_description = type_description

    @classmethod
    def from_dict(cls, dikt) -> 'IntakeQuestionType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The IntakeQuestionType of this IntakeQuestionType.  # noqa: E501
        :rtype: IntakeQuestionType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type_description(self):
        """Gets the type_description of this IntakeQuestionType.


        :return: The type_description of this IntakeQuestionType.
        :rtype: str
        """
        return self._type_description

    @type_description.setter
    def type_description(self, type_description):
        """Sets the type_description of this IntakeQuestionType.


        :param type_description: The type_description of this IntakeQuestionType.
        :type type_description: str
        """
        if type_description is None:
            raise ValueError("Invalid value for `type_description`, must not be `None`")  # noqa: E501

        self._type_description = type_description
