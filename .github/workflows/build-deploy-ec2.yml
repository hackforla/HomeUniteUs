name: Build and Deploy to EC2
#on: workflow_dispatch
on: pull_request
jobs:
  build-api:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./api
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
#      - name: Install Python dependencies
#        run: |
#          python -m pip install --upgrade pip
#          python -m pip install flake8 tox
#          pip install -r requirements.txt
#          pip install -r test-requirements.txt
#      - name: Lint with flake8
#        run: |
#          # stop the build if there are Python syntax errors or undefined names
#          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#      - name: Test with tox
#        run: |
#          tox
      - name: Build API
        run: |
          python -m pip install build
          python -m build --wheel
      - name: Archive API
        uses: actions/upload-artifact@v3
        with:
          name: api
          path: api/dist
          retention-days: 1
  build-app:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./app
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          # cache: 'npm'
      - name: Run npm CI
        run: npm ci
      - name: Build app
        run: npm run build
#      - name: Test app
#        run: npm run test
#      - name: Run E2E tests
#        uses: cypress-io/github-action@v5
#        with:
#          install: false
#          start: npm run dev
#          working-directory: ./app
#          wait-on: http://localhost:4040
      - name: Archive App
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: app/dist
          retention-days: 1
  deploy-api-app:
    needs: [build-api, build-app]
    runs-on: ubuntu-latest
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.HUU_EC2_SSH_KEY }}
          known_hosts: ${{ secrets.HUU_EC2_KNOWN_HOSTS }}
      - name: rsync over SSH API and App to EC2
        run: |
          # upload the api and app directories to the EC2 instance
          rsync --mkpath -r app ubuntu@homeunite.us:github-deploy/
          rsync --mkpath -r api ubuntu@homeunite.us:github-deploy/
    
