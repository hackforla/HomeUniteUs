name: Deploy to Incubator
on:
  workflow_dispatch:
    inputs:
      target-host-environment:
        type: choice
        description: The AWS environment to deploy (dev/test/prod)
        options: 
        - qa
permissions:
  id-token: write
  contents: read
jobs:
  TerraformPlan:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::035866691871:role/incubator-cicd-home-unite-us
          role-session-name: incubator-cicd-people-depot
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: home-unite-us-fullstack
          IMAGE_TAG: ${{ inputs.target-host-environment }}
        run: |
          docker build -f ./.incubator/app.Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # - name: Redeploy image in ECS
      #   id: redeploy-service
      #   env:
      #     CLUSTER_NAME: incubator-prod
      #     SERVICE_NAME: home-unite-us-fullstack-${{ inputs.target-host-environment }}
      #   run: |
      #     aws ecs update-service --force-new-deployment --service $SERVICE_NAME --cluster $CLUSTER_NAME




          