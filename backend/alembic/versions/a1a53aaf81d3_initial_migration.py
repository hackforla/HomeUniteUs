"""initial migration

Revision ID: a1a53aaf81d3
Revises: 
Create Date: 2024-10-09 20:55:54.123802

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'a1a53aaf81d3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'field_properties',
        sa.Column('properties_id', sa.Integer(), nullable=False),
        sa.Column('description', sa.String(), nullable=False),
        sa.Column('field_type', sa.String(), nullable=False),
        sa.Column('choices', sa.JSON(), nullable=False),
        sa.CheckConstraint(
            "field_type IN ('date', 'dropdown', 'multiple_choice', 'email', 'file_upload', 'group', 'long_text', 'number', 'short_text', 'yes_no')",
            name='chk_field_type'), sa.PrimaryKeyConstraint('properties_id'))
    op.create_table('field_validations',
                    sa.Column('validations_id', sa.Integer(), nullable=False),
                    sa.Column('required', sa.Boolean(), nullable=False),
                    sa.Column('max_length', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('validations_id'))
    op.create_table(
        'forms', sa.Column('form_id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=False),
        sa.Column('created_at',
                  sa.DateTime(timezone=True),
                  server_default=sa.func.timezone('UTC', sa.func.now()),
                  nullable=False), sa.PrimaryKeyConstraint('form_id'))
    op.create_table('housing_orgs',
                    sa.Column('housing_org_id', sa.Integer(), nullable=False),
                    sa.Column('org_name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('housing_org_id'),
                    sa.UniqueConstraint('org_name'))
    op.create_table('role', sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('type', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('type'))
    op.create_index(op.f('ix_role_id'), 'role', ['id'], unique=False)
    op.create_table('unmatched_guest_case_status',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('status_text', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('status_text'))
    op.create_table('field_groups',
                    sa.Column('group_id', sa.Integer(), nullable=False),
                    sa.Column('form_id', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(), nullable=False),
                    sa.Column('description', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['form_id'],
                        ['forms.form_id'],
                    ), sa.PrimaryKeyConstraint('group_id'))
    op.create_table(
        'housing_programs',
        sa.Column('housing_program_id', sa.Integer(), nullable=False),
        sa.Column('program_name', sa.String(), nullable=False),
        sa.Column('housing_org_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['housing_org_id'],
            ['housing_orgs.housing_org_id'],
        ), sa.PrimaryKeyConstraint('housing_program_id'))
    op.create_table(
        'user', sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('firstName', sa.String(length=255), nullable=False),
        sa.Column('middleName', sa.String(length=255), nullable=True),
        sa.Column('lastName', sa.String(length=255), nullable=True),
        sa.Column('roleId', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['roleId'],
            ['role.id'],
        ), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('email'))
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table(
        'fields', sa.Column('field_id', sa.Integer(), nullable=False),
        sa.Column('ref', sa.String(), nullable=False),
        sa.Column('properties_id', sa.Integer(), nullable=False),
        sa.Column('validations_id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['group_id'],
            ['field_groups.group_id'],
        ),
        sa.ForeignKeyConstraint(
            ['properties_id'],
            ['field_properties.properties_id'],
        ),
        sa.ForeignKeyConstraint(
            ['validations_id'],
            ['field_validations.validations_id'],
        ), sa.PrimaryKeyConstraint('field_id'))
    op.create_table(
        'unmatched_guest_case', sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('guest_id', sa.Integer(), nullable=False),
        sa.Column('coordinator_id', sa.Integer(), nullable=False),
        sa.Column('status_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['coordinator_id'],
            ['user.id'],
        ), sa.ForeignKeyConstraint(
            ['guest_id'],
            ['user.id'],
        ),
        sa.ForeignKeyConstraint(
            ['status_id'],
            ['unmatched_guest_case_status.id'],
        ), sa.PrimaryKeyConstraint('id'))
    op.create_table(
        'responses', sa.Column('answer_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('field_id', sa.Integer(), nullable=False),
        sa.Column('answer_text', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ['field_id'],
            ['fields.field_id'],
        ), sa.ForeignKeyConstraint(
            ['user_id'],
            ['user.id'],
        ), sa.PrimaryKeyConstraint('answer_id'))

    op.execute(
        "INSERT INTO role (type) VALUES ('admin') ON CONFLICT DO NOTHING")
    op.execute(
        "INSERT INTO role (type) VALUES ('guest') ON CONFLICT DO NOTHING")
    op.execute(
        "INSERT INTO role (type) VALUES ('coordinator') ON CONFLICT DO NOTHING"
    )
    op.execute(
        "INSERT INTO role (type) VALUES ('host') ON CONFLICT DO NOTHING")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('responses')
    op.drop_table('unmatched_guest_case')
    op.drop_table('fields')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_table('housing_programs')
    op.drop_table('field_groups')
    op.drop_table('unmatched_guest_case_status')
    op.drop_index(op.f('ix_role_id'), table_name='role')
    op.drop_table('role')
    op.drop_table('housing_orgs')
    op.drop_table('forms')
    op.drop_table('field_validations')
    op.drop_table('field_properties')

    op.execute("DELETE FROM role WHERE type='admin'")
    op.execute("DELETE FROM role WHERE type='guest'")
    op.execute("DELETE FROM role WHERE type='coordinator'")
    op.execute("DELETE FROM role WHERE type='host'")
    # ### end Alembic commands ###
